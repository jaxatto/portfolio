@use '@styles/all' as *;
@use 'sass:map';
@use 'sass:color';

// Palette modifiers
@each $key, $palette in $sample-palettes {
    :global(.#{$key}-card) {
        background: map.get($palette, bg);

        .link,
        .link svg {
            $link-color: map.get($palette, link);
            color: $link-color;
            fill: $link-color;
            transition: all 0.3s ease-in-out;
        }

        // On card hover
        &:hover,
        &:focus-visible {
            background: color.adjust(map.get($palette, bg), $lightness: -8%);

            .link,
            .link svg {
                color: color.adjust(map.get($palette, link), $lightness: -16%);
                fill: color.adjust(map.get($palette, link), $lightness: -16%);
            }
        }

        // On card active (press)
        &:active {
            .link,
            .link svg {
                color: color.adjust(map.get($palette, link), $lightness: -32%);
                fill: color.adjust(map.get($palette, link), $lightness: -32%);
            }
        }

        // Change card's focus ring to $link-color
        &:focus-visible {
            outline: px-to-rem(3) solid map.get($palette, link);
            outline-offset: px-to-rem(4);
            border-radius: px-to-rem(16);
        }

        .case-study-component-wrapper {
            box-shadow: 0 0 px-to-rem(56) px-to-rem(16) rgba(map.get($palette, link), $sample-shadow-opacity);
        }

        .case-study-image-fallback {
            background: map.get($palette, link);

            svg {
                fill: var(--color-white);
            }
        }

        // Move arrow icon on card hover/press/focus
        &:hover .link .icon,
        &:focus-visible .link .icon {
            transform: translateX(px-to-rem(4));
            transition: transform 0.2s;
        }
        &:active .link .icon {
            transform: translateX(px-to-rem(8));
            transition: transform 0.1s;
        }

        // Image grows on card hover/press/focus
        &:hover .case-study-image-wrapper,
        &:focus-visible .case-study-image-wrapper {
            transform: scale(1.04);
            transition: transform 0.3s cubic-bezier(0.4, 0.2, 0.2, 1);
        }
        &:active .case-study-image-wrapper {
            transform: scale(1.08);
            transition: transform 0.15s cubic-bezier(0.4, 0.2, 0.2, 1);
        }
    }
}

// Card base
.card {
    display: grid;
    grid-template-columns: 1fr minmax(0, px-to-rem(400));
    align-items: stretch;
    border-radius: px-to-rem(16);
    overflow: hidden;
    gap: px-to-rem(24);
    color: var(--color-dark);
    text-decoration: none;
    transition: all 0.3s ease-in-out;

    &:hover {
        text-decoration: none;
        color: var(--color-dark);
    }
}

// Orientation modifiers
.horizontal {
    gap: 0;

    .case-study-image-wrapper {
        right: px-to-rem(-16);

        @include respond(sm) {
            right: auto;
        }
    }
}

.vertical {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    gap: px-to-rem(24);

    .case-study-image-wrapper {
        width: 100%;
        height: auto;
    }

    .case-study-component-wrapper {
        left: px-to-rem(64);
        top: px-to-rem(16);
        bottom: 0;
    }

    .content {
        padding-bottom: px-to-rem(24);
    }
}

// Image wrapper and image
.case-study-image-wrapper {
    display: flex;
    align-items: stretch;
    height: 100%;
    width: px-to-rem(400);
    max-width: 100%;
    position: relative;
    transition: transform 0.3s cubic-bezier(0.4, 0.2, 0.2, 1);


    @include respond(md) {
        right: px-to-rem(-16);
    }

    @include respond(sm) {
        right: auto;
        width: 100%;
        height: auto;
        padding: 0 px-to-rem(40);
    }
}

.case-study-component-wrapper {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
    border-radius: px-to-rem(8);
    object-fit: cover;
    object-position: left top;
    bottom: px-to-rem(-56);

    @include respond(md) {
        bottom: px-to-rem(-40);
        left: 0;
        top: auto;
    }

    @include respond(sm) {
        border-radius: px-to-rem(16);
        left: auto;
        top: auto;
        bottom: auto;
    }

    @include respond(xs) {
        border-radius: px-to-rem(8);
    }
}

.case-study-image-fallback {
    border-radius: 0;
    padding: px-to-rem(32) 0;
}

// Responsive: horizontal on md, vertical on sm/xs
.card,
.vertical,
.horizontal {
    @include respond(md) {
        grid-template-columns: 1fr minmax(0, px-to-rem(400));
        grid-template-rows: 1fr;
        gap: px-to-rem(16);

        .case-study-component-wrapper {
            left: 0;
            top: auto;
            bottom: px-to-rem(-40);
        }

        .case-study-image-wrapper {
            width: px-to-rem(480);
            height: 100%;
            padding: 0;
        }

        .text {
            min-height: px-to-rem(148);
        }

        .content {
            padding-bottom: px-to-rem(40);
        }
    }

    @include respond(sm) {
        grid-template-columns: 1fr;
        grid-template-rows: auto auto;
        padding: px-to-rem(40) 0;
        align-items: center;
        text-align: center;
        gap: px-to-rem(48);

        .case-study-image-wrapper {
            width: 100%;
            height: auto;
            padding: 0 px-to-rem(40);
        }

        .case-study-component-wrapper {
            left: auto;
            top: auto;
            bottom: auto;
        }

        .content {
            padding: 0 px-to-rem(16);
            align-items: center;
            gap: px-to-rem(32);
            min-width: auto;
            max-width: 100%;
        }

        .text {
            min-height: 0;
        }
    }

    @include respond(xs) {
        gap: px-to-rem(40);

        .content {
            gap: px-to-rem(32);
        }
    }
}

.case-study-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    object-position: top left;
}

// Card content
.content {
    display: flex;
    flex-direction: column;
    gap: px-to-rem(48);
    padding: px-to-rem(24) px-to-rem(24) px-to-rem(40) px-to-rem(24);
    align-items: flex-start;
    width: 100%;
    min-width: px-to-rem(320);
    max-width: px-to-rem(480);

    .text {
        display: flex;
        flex-direction: column;
        gap: px-to-rem(8);
    }

    h3 {
        font-size: px-to-rem(32);
        font-weight: var(--font-weight-extra-bold);
        line-height: 1.3;
        margin: 0;

        @include respond(md) {
            font-size: px-to-rem(24);
        }

        @include respond(sm) {
            font-size: px-to-rem(20);
        }

        @include respond(xs) {
            font-size: px-to-rem(18);
        }
    }

    p {
        font-weight: var(--font-weight-regular);
        font-family: $font-body;
        font-size: px-to-rem(16);

        @include respond(xs) {
            font-size: px-to-rem(14);
        }
    }

    .link {
        text-decoration: underline;
        display: flex;
        align-items: center;
        gap: px-to-rem(4);
        font-weight: var(--font-weight-bold);
        font-size: px-to-rem(20);

        .icon {
            width: 1em;
            height: 1em;
            position: relative;
            top: px-to-rem(1);
        }

        @include respond(sm) {
            font-size: px-to-rem(18);
        }

        @include respond(xs) {
            font-size: px-to-rem(16);
        }
    }

}